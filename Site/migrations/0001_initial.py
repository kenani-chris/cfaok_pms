# Generated by Django 4.0.2 on 2022-02-21 10:10

import colorfield.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('assessment_id', models.AutoField(primary_key=True, serialize=False)),
                ('assessment_name', models.CharField(max_length=50, unique=True)),
                ('assessment_details', models.TextField()),
                ('assessment_start_date', models.DateTimeField()),
                ('assessment_end_date', models.DateTimeField()),
                ('assessment_min_score', models.FloatField(default=0)),
                ('assessment_max_score', models.FloatField(default=10)),
                ('assessment_scoring_use', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default=None, max_length=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BSCPillar',
            fields=[
                ('pillar_id', models.AutoField(primary_key=True, serialize=False)),
                ('pillar_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('company_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=100)),
                ('company_address', models.TextField()),
                ('company_logo', models.ImageField(upload_to='company')),
                ('company_status', models.BooleanField(default=False)),
                ('company_color1', colorfield.fields.ColorField(default='#00a8b4', image_field=None, max_length=18, samples=None)),
                ('company_color2', colorfield.fields.ColorField(default='#d9d9d9', image_field=None, max_length=18, samples=None)),
                ('company_color3', colorfield.fields.ColorField(default='#33393f', image_field=None, max_length=18, samples=None)),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('level_id', models.AutoField(primary_key=True, serialize=False)),
                ('level_name', models.CharField(max_length=200, unique=True)),
                ('level_description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='LevelCategory',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=200, unique=True)),
                ('category_description', models.TextField()),
                ('category_kpi_view', models.BooleanField(default=False)),
                ('category_parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='Site.levelcategory')),
            ],
        ),
        migrations.CreateModel(
            name='PMS',
            fields=[
                ('pms_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('pms_name', models.CharField(max_length=200, unique=True)),
                ('pms_description', models.TextField(help_text='One can use the field to give motto, or focus for the year', max_length=200)),
                ('pms_year_start_date', models.DateField()),
                ('pms_year_end_date', models.DateField()),
                ('pms_active', models.BooleanField(default=True)),
                ('pms_company', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.company')),
            ],
        ),
        migrations.CreateModel(
            name='StaffGrades',
            fields=[
                ('staff_grade_id', models.AutoField(primary_key=True, serialize=False)),
                ('staff_grade_name', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionKPI',
            fields=[
                ('submission_id', models.AutoField(primary_key=True, serialize=False)),
                ('submission_start_date', models.DateTimeField()),
                ('submission_end_date', models.DateTimeField()),
                ('submission_minimum_number', models.IntegerField(default=5)),
                ('submission_maximum_number', models.IntegerField(default=10)),
                ('submission_april_results', models.IntegerField(default=15)),
                ('submission_may_results', models.IntegerField(default=15)),
                ('submission_june_results', models.IntegerField(default=15)),
                ('submission_july_results', models.IntegerField(default=15)),
                ('submission_august_results', models.IntegerField(default=15)),
                ('submission_september_results', models.IntegerField(default=15)),
                ('submission_october_results', models.IntegerField(default=15)),
                ('submission_november_results', models.IntegerField(default=15)),
                ('submission_december_results', models.IntegerField(default=15)),
                ('submission_january_results', models.IntegerField(default=15)),
                ('submission_february_results', models.IntegerField(default=15)),
                ('submission_march_results', models.IntegerField(default=15)),
                ('submission_april_results_calculation', models.BooleanField(default=True)),
                ('submission_may_results_calculation', models.BooleanField(default=True)),
                ('submission_june_results_calculation', models.BooleanField(default=True)),
                ('submission_july_results_calculation', models.BooleanField(default=True)),
                ('submission_august_results_calculation', models.BooleanField(default=True)),
                ('submission_september_results_calculation', models.BooleanField(default=True)),
                ('submission_october_results_calculation', models.BooleanField(default=True)),
                ('submission_november_results_calculation', models.BooleanField(default=True)),
                ('submission_december_results_calculation', models.BooleanField(default=True)),
                ('submission_january_results_calculation', models.BooleanField(default=True)),
                ('submission_february_results_calculation', models.BooleanField(default=True)),
                ('submission_march_results_calculation', models.BooleanField(default=True)),
                ('submission_april_results_override', models.BooleanField(default=False)),
                ('submission_may_results_override', models.BooleanField(default=False)),
                ('submission_june_results_override', models.BooleanField(default=False)),
                ('submission_july_results_override', models.BooleanField(default=False)),
                ('submission_august_results_override', models.BooleanField(default=False)),
                ('submission_september_results_override', models.BooleanField(default=False)),
                ('submission_october_results_override', models.BooleanField(default=False)),
                ('submission_november_results_override', models.BooleanField(default=False)),
                ('submission_december_results_override', models.BooleanField(default=False)),
                ('submission_january_results_override', models.BooleanField(default=False)),
                ('submission_february_results_override', models.BooleanField(default=False)),
                ('submission_march_results_override', models.BooleanField(default=False)),
                ('submission_level_category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.levelcategory')),
                ('submission_pms', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.pms')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionCheckin',
            fields=[
                ('submission_id', models.AutoField(primary_key=True, serialize=False)),
                ('submission_april_results', models.IntegerField(default=0)),
                ('submission_may_results', models.IntegerField(default=0)),
                ('submission_june_results', models.IntegerField(default=0)),
                ('submission_july_results', models.IntegerField(default=0)),
                ('submission_august_results', models.IntegerField(default=0)),
                ('submission_september_results', models.IntegerField(default=0)),
                ('submission_october_results', models.IntegerField(default=0)),
                ('submission_november_results', models.IntegerField(default=0)),
                ('submission_december_results', models.IntegerField(default=0)),
                ('submission_january_results', models.IntegerField(default=0)),
                ('submission_february_results', models.IntegerField(default=0)),
                ('submission_march_results', models.IntegerField(default=0)),
                ('submission_one_results', models.IntegerField(default=0)),
                ('submission_two_results', models.IntegerField(default=0)),
                ('submission_three_results', models.IntegerField(default=10)),
                ('submission_four_results', models.IntegerField(default=20)),
                ('submission_five_results', models.IntegerField(default=30)),
                ('submission_six_results', models.IntegerField(default=40)),
                ('submission_seven_results', models.IntegerField(default=50)),
                ('submission_eight_results', models.IntegerField(default=60)),
                ('submission_nine_results', models.IntegerField(default=70)),
                ('submission_ten_results', models.IntegerField(default=80)),
                ('submission_eleven_results', models.IntegerField(default=90)),
                ('submission_twelve_results', models.IntegerField(default=100)),
                ('submission_april_checkin_calculation', models.BooleanField(default=True)),
                ('submission_may_checkin_calculation', models.BooleanField(default=True)),
                ('submission_june_checkin_calculation', models.BooleanField(default=True)),
                ('submission_july_checkin_calculation', models.BooleanField(default=True)),
                ('submission_august_checkin_calculation', models.BooleanField(default=True)),
                ('submission_september_checkin_calculation', models.BooleanField(default=True)),
                ('submission_october_checkin_calculation', models.BooleanField(default=True)),
                ('submission_november_checkin_calculation', models.BooleanField(default=True)),
                ('submission_december_checkin_calculation', models.BooleanField(default=True)),
                ('submission_january_checkin_calculation', models.BooleanField(default=True)),
                ('submission_february_checkin_calculation', models.BooleanField(default=True)),
                ('submission_march_checkin_calculation', models.BooleanField(default=True)),
                ('submission_april_checkin_override', models.BooleanField(default=False)),
                ('submission_may_checkin_override', models.BooleanField(default=False)),
                ('submission_june_checkin_override', models.BooleanField(default=False)),
                ('submission_july_checkin_override', models.BooleanField(default=False)),
                ('submission_august_checkin_override', models.BooleanField(default=False)),
                ('submission_september_checkin_override', models.BooleanField(default=False)),
                ('submission_october_checkin_override', models.BooleanField(default=False)),
                ('submission_november_checkin_override', models.BooleanField(default=False)),
                ('submission_december_checkin_override', models.BooleanField(default=False)),
                ('submission_january_checkin_override', models.BooleanField(default=False)),
                ('submission_february_checkin_override', models.BooleanField(default=False)),
                ('submission_march_checkin_override', models.BooleanField(default=False)),
                ('submission_level_category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.levelcategory')),
                ('submission_pms', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.pms')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('staff_id', models.AutoField(primary_key=True, serialize=False)),
                ('staff_pf_number', models.CharField(max_length=10)),
                ('staff_active', models.BooleanField(default=True)),
                ('staff_superuser', models.BooleanField(default=False)),
                ('staff_visibility', models.BooleanField(default=True)),
                ('staff_company', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.company')),
                ('staff_grade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='Site.staffgrades')),
                ('staff_person', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='Staff_person', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('question_direction', models.CharField(choices=[('Top', 'Top'), ('Bottom', 'Bottom')], max_length=6)),
                ('question_assessment', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.assessment')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionResponses',
            fields=[
                ('response_id', models.AutoField(primary_key=True, serialize=False)),
                ('response_comment', models.TextField(blank=True, default=None, null=True)),
                ('response_submitted', models.FloatField(default=None)),
                ('response_submitted_date', models.DateTimeField()),
                ('response_last_edit', models.DateTimeField(auto_now=True)),
                ('response_evaluated', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='Response_staff_evaluated', to='Site.staff')),
                ('response_question', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.questions')),
                ('response_staff', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='Response_staff', to='Site.staff')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.AutoField(primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('Error', 'Error'), ('KPI', 'KPI'), ('CheckIn', 'CheckIn'), ('Assessment', 'Assessment'), ('Notification', 'Notification')], max_length=12)),
                ('notification_reference_key', models.CharField(max_length=30)),
                ('notification_title', models.CharField(max_length=15)),
                ('notification_message', models.TextField()),
                ('notification_date', models.DateField(auto_now=True)),
                ('notification_status', models.CharField(choices=[('Pending', 'Pending'), ('Sent', 'Sent'), ('Read', 'Read')], default=None, max_length=10)),
                ('notification_recipient', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='Notification_Receiver', to='Site.staff')),
            ],
        ),
        migrations.CreateModel(
            name='Matrix',
            fields=[
                ('matrix_id', models.AutoField(primary_key=True, serialize=False)),
                ('matrix_checkin_weight', models.FloatField(blank=True, null=True)),
                ('matrix_kpi_weight', models.FloatField(blank=True, null=True)),
                ('matrix_assessment_weight', models.FloatField(blank=True, null=True)),
                ('matrix_bu_weight', models.FloatField(blank=True, null=True)),
                ('matrix_company_weight', models.FloatField(blank=True, null=True)),
                ('matrix_grade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='Site.staffgrades')),
                ('matrix_pms', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='Site.pms')),
            ],
        ),
        migrations.CreateModel(
            name='LevelMembership',
            fields=[
                ('membership_id', models.AutoField(primary_key=True, serialize=False)),
                ('membership_is_active', models.BooleanField(default=True)),
                ('membership_level', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.level')),
                ('membership_staff', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.staff')),
            ],
        ),
        migrations.AddField(
            model_name='level',
            name='level_category',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.RESTRICT, related_name='level_category', to='Site.levelcategory'),
        ),
        migrations.AddField(
            model_name='level',
            name='level_head',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='Head_level', to='Site.staff'),
        ),
        migrations.AddField(
            model_name='level',
            name='level_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='Site.level'),
        ),
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('kpi_id', models.AutoField(primary_key=True, serialize=False)),
                ('kpi_title', models.CharField(max_length=200)),
                ('kpi_details', models.TextField(blank=True, null=True)),
                ('kpi_criteria', models.TextField(blank=True, null=True)),
                ('kpi_target', models.FloatField()),
                ('kpi_weight', models.FloatField(default=20)),
                ('kpi_units', models.CharField(blank=True, max_length=5, null=True)),
                ('kpi_function', models.CharField(blank=True, choices=[('maximize', 'maximize'), ('minimize', 'minimize')], default='maximize', max_length=8)),
                ('kpi_april_target', models.FloatField(blank=True, null=True)),
                ('kpi_may_target', models.FloatField(blank=True, null=True)),
                ('kpi_june_target', models.FloatField(blank=True, null=True)),
                ('kpi_july_target', models.FloatField(blank=True, null=True)),
                ('kpi_august_target', models.FloatField(blank=True, null=True)),
                ('kpi_september_target', models.FloatField(blank=True, null=True)),
                ('kpi_october_target', models.FloatField(blank=True, null=True)),
                ('kpi_november_target', models.FloatField(blank=True, null=True)),
                ('kpi_december_target', models.FloatField(blank=True, null=True)),
                ('kpi_january_target', models.FloatField(blank=True, null=True)),
                ('kpi_february_target', models.FloatField(blank=True, null=True)),
                ('kpi_march_target', models.FloatField(blank=True, null=True)),
                ('kpi_april_score', models.FloatField(blank=True, null=True)),
                ('kpi_may_score', models.FloatField(blank=True, null=True)),
                ('kpi_june_score', models.FloatField(blank=True, null=True)),
                ('kpi_july_score', models.FloatField(blank=True, null=True)),
                ('kpi_august_score', models.FloatField(blank=True, null=True)),
                ('kpi_september_score', models.FloatField(blank=True, null=True)),
                ('kpi_october_score', models.FloatField(blank=True, null=True)),
                ('kpi_november_score', models.FloatField(blank=True, null=True)),
                ('kpi_december_score', models.FloatField(blank=True, null=True)),
                ('kpi_january_score', models.FloatField(blank=True, null=True)),
                ('kpi_february_score', models.FloatField(blank=True, null=True)),
                ('kpi_march_score', models.FloatField(blank=True, null=True)),
                ('kpi_bsc_s_target', models.FloatField(blank=True, null=True)),
                ('kpi_bsc_a_target', models.FloatField(blank=True, null=True)),
                ('kpi_bsc_b_target', models.FloatField(blank=True, null=True)),
                ('kpi_bsc_c_target', models.FloatField(blank=True, null=True)),
                ('kpi_bsc_d_target', models.FloatField(blank=True, null=True)),
                ('kpi_april_score_approve', models.BooleanField(default=False)),
                ('kpi_may_score_approve', models.BooleanField(default=False)),
                ('kpi_june_score_approve', models.BooleanField(default=False)),
                ('kpi_july_score_approve', models.BooleanField(default=False)),
                ('kpi_august_score_approve', models.BooleanField(default=False)),
                ('kpi_september_score_approve', models.BooleanField(default=False)),
                ('kpi_october_score_approve', models.BooleanField(default=False)),
                ('kpi_november_score_approve', models.BooleanField(default=False)),
                ('kpi_december_score_approve', models.BooleanField(default=False)),
                ('kpi_january_score_approve', models.BooleanField(default=False)),
                ('kpi_february_score_approve', models.BooleanField(default=False)),
                ('kpi_march_score_approve', models.BooleanField(default=False)),
                ('kpi_submit_date', models.DateTimeField()),
                ('kpi_status', models.CharField(blank=True, choices=[('Submitted', 'Submitted'), ('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Edit', 'Edit Mode')], default='Submitted', max_length=40)),
                ('kpi_type', models.CharField(blank=True, choices=[('', ''), ('Addition', 'Addition'), ('Average', 'Average'), ('YTD', 'YTD')], default='Average', max_length=10)),
                ('kpi_all_results_approve', models.BooleanField(default=False)),
                ('kpi_bsc_pillar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='Site.bscpillar')),
                ('kpi_pms', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.pms')),
                ('kpi_staff', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.staff')),
            ],
        ),
        migrations.CreateModel(
            name='CheckIn',
            fields=[
                ('check_in_id', models.AutoField(primary_key=True, serialize=False)),
                ('check_in_submit_date', models.DateTimeField()),
                ('check_in_approval_date', models.DateTimeField(blank=True, null=True)),
                ('check_in_performance_area', models.TextField()),
                ('check_in_progress_discussed', models.TextField()),
                ('check_in_team_member_actions', models.TextField()),
                ('check_in_team_leader_support', models.TextField()),
                ('check_in_team_leader_comment', models.TextField(blank=True, null=True)),
                ('check_in_month', models.CharField(choices=[('April', 'April'), ('May', 'May'), ('June', 'June'), ('July', 'July'), ('August', 'August'), ('September', 'September'), ('October', 'October'), ('November', 'November'), ('December', 'December'), ('January', 'January'), ('February', 'February'), ('March', 'March')], default=None, max_length=15, null=True)),
                ('check_in_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Edit', 'Edit'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', help_text='PMS Status', max_length=10)),
                ('check_in_last_edit', models.DateTimeField(auto_now=True)),
                ('check_in_Staff', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.staff')),
                ('check_in_approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='Approver', to='Site.staff')),
                ('check_in_pms', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.pms')),
            ],
        ),
        migrations.AddField(
            model_name='bscpillar',
            name='pillar_pms',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.pms'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='assessment_pms',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.pms'),
        ),
        migrations.CreateModel(
            name='ApprovalLevelsKPI',
            fields=[
                ('approval_level_id', models.AutoField(primary_key=True, serialize=False)),
                ('approval_level_type', models.CharField(choices=[('Intermediate', 'Intermediate Approval'), ('Final', 'Final Approval')], default='Intermediate', max_length=12)),
                ('approval_level_category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.levelcategory')),
                ('approval_level_pms', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.pms')),
            ],
        ),
        migrations.CreateModel(
            name='ApprovalKPI',
            fields=[
                ('approval_id', models.AutoField(primary_key=True, serialize=False)),
                ('approval_action', models.CharField(blank=True, choices=[('Submitted', 'Submitted'), ('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Edit', 'Edit Mode')], default=None, max_length=9, null=True)),
                ('approval_category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.levelcategory')),
                ('approval_kpi', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.kpi')),
                ('approval_staff', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Site.staff')),
            ],
        ),
    ]
