# Generated by Django 3.2.3 on 2021-05-22 13:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='branch',
            fields=[
                ('branch_id', models.UUIDField(default=uuid.uuid4, help_text='Unique Identifier for branch', primary_key=True, serialize=False)),
                ('branch_name', models.CharField(max_length=200)),
                ('branch_abbreviation', models.CharField(max_length=10)),
                ('branch_mail', models.CharField(max_length=50)),
                ('branch_contact', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='bu',
            fields=[
                ('bu_id', models.UUIDField(default=uuid.uuid4, help_text='Unique Identifier for BU', primary_key=True, serialize=False)),
                ('bu_name', models.CharField(max_length=200)),
                ('bu_abbreviation', models.CharField(blank=True, max_length=10, null=True)),
                ('bu_mail', models.CharField(blank=True, max_length=50, null=True)),
                ('bu_contact', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='department',
            fields=[
                ('department_id', models.UUIDField(default=uuid.uuid4, help_text='Unique Identifier for department', primary_key=True, serialize=False)),
                ('department_name', models.CharField(max_length=200)),
                ('department_abbreviation', models.CharField(max_length=10)),
                ('department_mail', models.CharField(max_length=50)),
                ('department_contact', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='evaluation',
            fields=[
                ('evaluation_id', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier evaluations', primary_key=True, serialize=False)),
                ('evaluation_name', models.CharField(max_length=50)),
                ('evaluation_start_date', models.DateField()),
                ('evaluation_end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='pms',
            fields=[
                ('pms_id', models.UUIDField(default=uuid.uuid4, help_text='Unique Id for PMS', primary_key=True, serialize=False)),
                ('pms_name', models.CharField(max_length=200)),
                ('pms_start_date', models.DateField()),
                ('pms_end_date', models.DateField()),
                ('pms_status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', help_text='PMS Status', max_length=10)),
                ('pms_individual_kpi_number', models.IntegerField(help_text='Number Of KPIs to be submitted by an individual')),
                ('pms_individual_submit_start_date', models.DateField()),
                ('pms_individual_submit_end_date', models.DateField()),
                ('bu_individual_kpi_number', models.IntegerField(help_text='Number Of KPIs to be submitted by a BU')),
                ('bu_individual_submit_start_date', models.DateField()),
                ('bu_individual_submit_end_date', models.DateField()),
                ('company_individual_kpi_number', models.IntegerField(help_text='Number Of KPIs to be submitted by the company')),
                ('company_individual_submit_start_date', models.DateField()),
                ('company_individual_submit_end_date', models.DateField()),
                ('checkin_number', models.IntegerField(default=12, help_text='Number Of Checkins to be submitted by the user')),
                ('assessment_number', models.IntegerField(default=3, help_text='Number Of assessment to be done in the year')),
            ],
        ),
        migrations.CreateModel(
            name='question_staff_evaluate_tl',
            fields=[
                ('question_id', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier for Question', primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('question_evaluation', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tamk.evaluation')),
            ],
        ),
        migrations.CreateModel(
            name='question_tl_evaluate_staff',
            fields=[
                ('question_id', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier for Question', primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('question_evaluation', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tamk.evaluation')),
            ],
        ),
        migrations.CreateModel(
            name='team',
            fields=[
                ('team_id', models.UUIDField(default=uuid.uuid4, help_text='Unique Identifier for department', primary_key=True, serialize=False)),
                ('team_name', models.CharField(max_length=200)),
                ('team_motto', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_Pf_Number', models.CharField(max_length=10)),
                ('staff_email_address', models.CharField(max_length=100)),
                ('staff_md', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', help_text='If user is MD', max_length=10)),
                ('staff_grade', models.CharField(blank=True, choices=[('T3', 'T3'), ('T4', 'T4'), ('T5', 'T5'), ('T1', 'T1'), ('T2', 'T2'), ('T6', 'T6')], help_text='user grade', max_length=5)),
                ('staff_company', models.CharField(blank=True, choices=[('tydia', 'tydia'), ('cfao_kenya', 'cfao_kenya'), ('toyota_kenya', 'toyota_kenya'), ('tamk', 'tamk'), ('cfao_agri', 'cfao_agri')], help_text='user grade', max_length=15)),
                ('staff_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_belongs_to_branch', to='tamk.branch')),
                ('staff_bu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_belongs_to_bu', to='tamk.bu')),
                ('staff_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_belongs_to_dept', to='tamk.department')),
                ('staff_head_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_is_head_branch', to='tamk.branch')),
                ('staff_head_bu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_is_head_bu', to='tamk.bu')),
                ('staff_head_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_is_head_dept', to='tamk.department')),
                ('staff_head_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_is_head_team', to='tamk.team')),
                ('staff_person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tamk_staff_person', to=settings.AUTH_USER_MODEL)),
                ('staff_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_belongs_to_team', to='tamk.team')),
            ],
        ),
        migrations.CreateModel(
            name='score_matrix',
            fields=[
                ('matrix_id', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier evaluations', primary_key=True, serialize=False)),
                ('matrix_class', models.CharField(blank=True, choices=[('MD', 'MD'), ('BU', 'BU'), ('Non_BU', 'Non_BU'), ('staff', 'staff')], help_text='PMS class', max_length=10)),
                ('matrix_company_kpi_weight', models.FloatField(blank=True, null=True)),
                ('matrix_bu_kpi_weight', models.FloatField(blank=True, null=True)),
                ('matrix_individual_kpi_weight', models.FloatField(blank=True, null=True)),
                ('matrix_assessment_weight', models.FloatField(blank=True, null=True)),
                ('matrix_pms', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tamk.pms')),
            ],
        ),
        migrations.CreateModel(
            name='responses_tl_evaluate_staff',
            fields=[
                ('response_id', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier for responses', primary_key=True, serialize=False)),
                ('response_score', models.IntegerField()),
                ('response_comment', models.TextField()),
                ('response_question', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tamk.question_tl_evaluate_staff')),
                ('response_staff', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_responded_staff', to=settings.AUTH_USER_MODEL)),
                ('response_team_leader', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_responding_team_leader', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='responses_staff_evaluate_tl',
            fields=[
                ('response_id', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier for responses', primary_key=True, serialize=False)),
                ('response_score', models.IntegerField()),
                ('response_comment', models.TextField()),
                ('response_question', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tamk.question_staff_evaluate_tl')),
                ('response_staff', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_responding_staff', to=settings.AUTH_USER_MODEL)),
                ('response_team_leader', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_responded_team_leader', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='notification',
            fields=[
                ('notification_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(max_length=10)),
                ('notification_title', models.CharField(max_length=15)),
                ('notification_message', models.TextField()),
                ('notification_date', models.DateField()),
                ('notification_status', models.CharField(choices=[('unread', 'unread'), ('read', 'read'), ('deleted', 'deleted')], default='unread', max_length=10)),
                ('notification_receiver', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_notification_receiver', to=settings.AUTH_USER_MODEL)),
                ('notification_sender', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_notification_Sender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='individual_Kpi',
            fields=[
                ('individual_kpi_id', models.UUIDField(default=uuid.uuid4, help_text='Unique Identifier for individual KPI', primary_key=True, serialize=False)),
                ('individual_kpi_title', models.CharField(max_length=200)),
                ('individual_kpi_details', models.TextField(blank=True, null=True)),
                ('individual_kpi_criteria', models.CharField(max_length=100)),
                ('individual_kpi_target', models.FloatField()),
                ('individual_kpi_units', models.CharField(blank=True, max_length=5, null=True)),
                ('individual_kpi_function', models.CharField(blank=True, choices=[('maximize', 'maximize'), ('minimize', 'minimize')], default='maximize', help_text='KPI categorize function', max_length=10)),
                ('individual_kpi_april_score', models.FloatField(blank=True, null=True)),
                ('individual_kpi_may_score', models.FloatField(blank=True, null=True)),
                ('individual_kpi_june_score', models.FloatField(blank=True, null=True)),
                ('individual_kpi_july_score', models.FloatField(blank=True, null=True)),
                ('individual_kpi_august_score', models.FloatField(blank=True, null=True)),
                ('individual_kpi_september_score', models.FloatField(blank=True, null=True)),
                ('individual_kpi_october_score', models.FloatField(blank=True, null=True)),
                ('individual_kpi_november_score', models.FloatField(blank=True, null=True)),
                ('individual_kpi_december_score', models.FloatField(blank=True, null=True)),
                ('individual_kpi_january_score', models.FloatField(blank=True, null=True)),
                ('individual_kpi_february_score', models.FloatField(blank=True, null=True)),
                ('individual_kpi_march_score', models.FloatField(blank=True, null=True)),
                ('individual_kpi_submit_date', models.DateField(blank=True, null=True)),
                ('individual_kpi_approval1_date', models.DateField(blank=True, null=True)),
                ('individual_kpi_approval2_date', models.DateField(blank=True, null=True)),
                ('individual_kpi_last_edit', models.DateField(blank=True, null=True)),
                ('individual_kpi_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Approved 1', 'Approval1 - By Team Leader'), ('Approved 2', 'Approval2 - By BU Head'), ('Rejected 1', 'Rejected - By Team Leader'), ('Rejected 2', 'Rejected - By BU Head'), ('Edit', 'Edit Mode')], default='Pending', help_text='KPI categorize function', max_length=40)),
                ('individual_kpi_type', models.CharField(blank=True, choices=[('cumulative', 'cumulative'), ('YTD', 'YTD')], default='cumulative', max_length=10)),
                ('individual_kpi_bu_leader_approval', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_bu_leader_approval', to=settings.AUTH_USER_MODEL)),
                ('individual_kpi_pms', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tamk.pms')),
                ('individual_kpi_team_leader_approval', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_team_leader_approval', to=settings.AUTH_USER_MODEL)),
                ('individual_kpi_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_user_submitting', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='evaluation',
            name='evaluation_pms',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tamk.pms'),
        ),
        migrations.CreateModel(
            name='done_tl_evaluates_staff',
            fields=[
                ('done_id', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier done evaluation', primary_key=True, serialize=False)),
                ('score_q1', models.CharField(blank=True, choices=[('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], default=None, max_length=20, null=True)),
                ('score_q2', models.CharField(blank=True, choices=[('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], default=None, max_length=20, null=True)),
                ('score_q3', models.CharField(blank=True, choices=[('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], default=None, max_length=20, null=True)),
                ('score_q4', models.CharField(blank=True, choices=[('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], default=None, max_length=20, null=True)),
                ('score_q5', models.CharField(blank=True, choices=[('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], default=None, max_length=20, null=True)),
                ('score_q6', models.CharField(blank=True, choices=[('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], default=None, max_length=20, null=True)),
                ('score_q7', models.CharField(blank=True, choices=[('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], default=None, max_length=20, null=True)),
                ('score_q1_comment', models.TextField(blank=True, default=None, null=True)),
                ('score_q2_comment', models.TextField(blank=True, default=None, null=True)),
                ('score_q3_comment', models.TextField(blank=True, default=None, null=True)),
                ('score_q4_comment', models.TextField(blank=True, default=None, null=True)),
                ('score_q5_comment', models.TextField(blank=True, default=None, null=True)),
                ('score_q6_comment', models.TextField(blank=True, default=None, null=True)),
                ('score_q7_comment', models.TextField(blank=True, default=None, null=True)),
                ('done_evaluation', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tamk.evaluation')),
                ('done_q1', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_q1', to='tamk.question_tl_evaluate_staff')),
                ('done_q2', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_q2', to='tamk.question_tl_evaluate_staff')),
                ('done_q3', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_q3', to='tamk.question_tl_evaluate_staff')),
                ('done_q4', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_q4', to='tamk.question_tl_evaluate_staff')),
                ('done_q5', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_q5', to='tamk.question_tl_evaluate_staff')),
                ('done_q6', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_q6', to='tamk.question_tl_evaluate_staff')),
                ('done_q7', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_q7', to='tamk.question_tl_evaluate_staff')),
                ('done_staff', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_staff_evaluated', to=settings.AUTH_USER_MODEL)),
                ('done_team_leader', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_tl_evaluating', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='done_staff_evaluates_tl',
            fields=[
                ('done_id', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier done evaluation', primary_key=True, serialize=False)),
                ('score_q1', models.CharField(blank=True, choices=[('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], default=None, max_length=20, null=True)),
                ('score_q2', models.CharField(blank=True, choices=[('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], default=None, max_length=20, null=True)),
                ('score_q3', models.CharField(blank=True, choices=[('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], default=None, max_length=20, null=True)),
                ('score_q4', models.CharField(blank=True, choices=[('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], default=None, max_length=20, null=True)),
                ('score_q5', models.CharField(blank=True, choices=[('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], default=None, max_length=20, null=True)),
                ('score_q6', models.CharField(blank=True, choices=[('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], default=None, max_length=20, null=True)),
                ('score_q7', models.CharField(blank=True, choices=[('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], default=None, max_length=20, null=True)),
                ('score_q1_comment', models.TextField(blank=True, default=None, null=True)),
                ('score_q2_comment', models.TextField(blank=True, default=None, null=True)),
                ('score_q3_comment', models.TextField(blank=True, default=None, null=True)),
                ('score_q4_comment', models.TextField(blank=True, default=None, null=True)),
                ('score_q5_comment', models.TextField(blank=True, default=None, null=True)),
                ('score_q6_comment', models.TextField(blank=True, default=None, null=True)),
                ('score_q7_comment', models.TextField(blank=True, default=None, null=True)),
                ('done_evaluation', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tamk.evaluation')),
                ('done_q1', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_q1', to='tamk.question_staff_evaluate_tl')),
                ('done_q2', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_q2', to='tamk.question_staff_evaluate_tl')),
                ('done_q3', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_q3', to='tamk.question_staff_evaluate_tl')),
                ('done_q4', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_q4', to='tamk.question_staff_evaluate_tl')),
                ('done_q5', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_q5', to='tamk.question_staff_evaluate_tl')),
                ('done_q6', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_q6', to='tamk.question_staff_evaluate_tl')),
                ('done_q7', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_q7', to='tamk.question_staff_evaluate_tl')),
                ('done_staff', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_staff_evaluating', to=settings.AUTH_USER_MODEL)),
                ('done_team_leader', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_tl_evaluated', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='company_kpi',
            fields=[
                ('company_kpi_id', models.UUIDField(default=uuid.uuid4, help_text='Unique Identifier for company KPI', primary_key=True, serialize=False)),
                ('company_kpi_title', models.CharField(max_length=200)),
                ('company_kpi_details', models.TextField()),
                ('company_kpi_target', models.FloatField()),
                ('company_kpi_weight', models.FloatField(blank=True, null=True)),
                ('company_kpi_units', models.CharField(blank=True, max_length=5, null=True)),
                ('company_kpi_function', models.CharField(blank=True, choices=[('maximize', 'maximize'), ('minimize', 'minimize')], default='Pending', help_text='KPI categorize function', max_length=10)),
                ('company_kpi_april_score', models.FloatField(blank=True, null=True)),
                ('company_kpi_may_score', models.FloatField(blank=True, null=True)),
                ('company_kpi_june_score', models.FloatField(blank=True, null=True)),
                ('company_kpi_july_score', models.FloatField(blank=True, null=True)),
                ('company_kpi_august_score', models.FloatField(blank=True, null=True)),
                ('company_kpi_september_score', models.FloatField(blank=True, null=True)),
                ('company_kpi_october_score', models.FloatField(blank=True, null=True)),
                ('company_kpi_november_score', models.FloatField(blank=True, null=True)),
                ('company_kpi_december_score', models.FloatField(blank=True, null=True)),
                ('company_kpi_january_score', models.FloatField(blank=True, null=True)),
                ('company_kpi_february_score', models.FloatField(blank=True, null=True)),
                ('company_kpi_march_score', models.FloatField(blank=True, null=True)),
                ('company_kpi_submit_date', models.DateField(blank=True, null=True)),
                ('company_kpi_last_edit', models.DateField(blank=True, null=True)),
                ('company_kpi_status', models.CharField(blank=True, choices=[('Pending', 'maximize'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Edit', 'Edit Mode')], default='Approved', max_length=10)),
                ('company_kpi_type', models.CharField(blank=True, choices=[('cumulative', 'cumulative'), ('YTD', 'YTD')], default='cumulative', max_length=10)),
                ('company_kpi_pms_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tamk.pms')),
                ('company_kpi_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_person_submitting', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='checkIn',
            fields=[
                ('checkIn_id', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier evaluations', primary_key=True, serialize=False)),
                ('checkIn_submit_date', models.DateField(blank=True, null=True)),
                ('checkIn_confirm_date', models.DateField(blank=True, null=True)),
                ('checkIn_performance_area', models.TextField()),
                ('checkIn_progress_discussed', models.TextField()),
                ('checkIn_team_member_actions', models.TextField()),
                ('checkIn_team_leader_support', models.TextField()),
                ('checkIn_team_leader_comment', models.TextField()),
                ('checkIn_month', models.CharField(default=None, max_length=15)),
                ('checkIn_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Confirmed', 'Confirmed'), ('Rejected', 'Rejected')], default='Pending', help_text='PMS Status', max_length=10)),
                ('checkIn_pms', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tamk.pms')),
                ('checkIn_staff', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_individual_user', to=settings.AUTH_USER_MODEL)),
                ('checkIn_team_leader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_team_leader', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='bu_kpi',
            fields=[
                ('bu_kpi_id', models.UUIDField(default=uuid.uuid4, help_text='Unique Identifier for BU KPI', primary_key=True, serialize=False)),
                ('bu_kpi_title', models.CharField(max_length=200)),
                ('bu_kpi_details', models.TextField()),
                ('bu_kpi_target', models.FloatField()),
                ('bu_kpi_weight', models.FloatField(blank=True, null=True)),
                ('bu_kpi_units', models.CharField(blank=True, max_length=5, null=True)),
                ('bu_kpi_function', models.CharField(blank=True, choices=[('maximize', 'maximize'), ('minimize', 'minimize')], default='Pending', help_text='KPI categorize function', max_length=10)),
                ('bu_kpi_april_score', models.FloatField(blank=True, null=True)),
                ('bu_kpi_may_score', models.FloatField(blank=True, null=True)),
                ('bu_kpi_june_score', models.FloatField(blank=True, null=True)),
                ('bu_kpi_july_score', models.FloatField(blank=True, null=True)),
                ('bu_kpi_august_score', models.FloatField(blank=True, null=True)),
                ('bu_kpi_september_score', models.FloatField(blank=True, null=True)),
                ('bu_kpi_october_score', models.FloatField(blank=True, null=True)),
                ('bu_kpi_november_score', models.FloatField(blank=True, null=True)),
                ('bu_kpi_december_score', models.FloatField(blank=True, null=True)),
                ('bu_kpi_january_score', models.FloatField(blank=True, null=True)),
                ('bu_kpi_february_score', models.FloatField(blank=True, null=True)),
                ('bu_kpi_march_score', models.FloatField(blank=True, null=True)),
                ('bu_kpi_submit_date', models.DateField(blank=True, null=True)),
                ('bu_kpi_approval_date', models.DateField(blank=True, null=True)),
                ('bu_kpi_last_edit', models.DateField(blank=True, null=True)),
                ('bu_kpi_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Edit', 'Edit Mode')], default='Pending', help_text='KPI status', max_length=10)),
                ('bu_kpi_type', models.CharField(blank=True, choices=[('cumulative', 'cumulative'), ('YTD', 'YTD')], default='cumulative', max_length=10)),
                ('bu_kpi_bu', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_Bu_identity', to='tamk.bu')),
                ('bu_kpi_bu_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_Bu_submitting', to=settings.AUTH_USER_MODEL)),
                ('bu_kpi_pms_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tamk.pms')),
                ('bu_kpi_team_leader_approval', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tamk_bu_team_leader_approval', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
